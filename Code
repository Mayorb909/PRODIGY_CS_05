from scapy.all import sniff, IP, TCP, UDP, Raw
import datetime

def process_packet(packet):
    print("\n--- Packet Captured ---")
    print(f"Time: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")

    # Check if the packet has an IP layer
    if packet.haslayer(IP):
        ip_layer = packet[IP]
        print(f"Source IP: {ip_layer.src}")
        print(f"Destination IP: {ip_layer.dst}")
        print(f"Protocol: {ip_layer.proto}")

        # Check for TCP or UDP
        if packet.haslayer(TCP):
            tcp_layer = packet[TCP]
            print(f"Source Port: {tcp_layer.sport}")
            print(f"Destination Port: {tcp_layer.dport}")
        elif packet.haslayer(UDP):
            udp_layer = packet[UDP]
            print(f"Source Port: {udp_layer.sport}")
            print(f"Destination Port: {udp_layer.dport}")

        # Display Raw Payload if present
        if packet.haslayer(Raw):
            payload = packet[Raw].load
            print("Payload Data:", payload[:50])  # Show first 50 bytes

# Start sniffing on your network interface (e.g., "eth0" or "Wi-Fi")
print("Starting packet sniffing... Press Ctrl+C to stop.")
sniff(prn=process_packet, store=False)
